// Generated by CoffeeScript 1.3.3
(function() {
  var Organizations,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  module.exports = Organizations = (function() {

    function Organizations(client) {
      this.client = client;
      this.update = __bind(this.update, this);

      this["delete"] = __bind(this["delete"], this);

      this.create = __bind(this.create, this);

      this.get = __bind(this.get, this);

      this.all = __bind(this.all, this);

      if (!this.client) {
        throw new Error("client parameter is required");
      }
    }

    Organizations.prototype.all = function(actor, cb) {
      if (cb == null) {
        cb = function() {};
      }
      return this.client.get("/organizations", actor, cb);
    };

    Organizations.prototype.get = function(id, actor, cb) {
      if (cb == null) {
        cb = function() {};
      }
      return this.client.get("/organizations/" + id, actor, cb);
    };

    Organizations.prototype.create = function(data, actor, cb) {
      if (cb == null) {
        cb = function() {};
      }
      return this.client.post("/organizations", data, actor, cb);
    };

    Organizations.prototype["delete"] = function(id, actor, cb) {
      if (cb == null) {
        cb = function() {};
      }
      return this.client["delete"]("/organizations/" + id, actor, cb);
    };

    Organizations.prototype.update = function(id, data, actor, cb) {
      if (cb == null) {
        cb = function() {};
      }
      return this.client.patch("/organizations/" + id, data, actor, cb);
    };

    return Organizations;

  })();

}).call(this);
